" Vim with all enhancements
source $VIMRUNTIME/vimrc_example.vim

" Use the internal diff if available.
" Otherwise use the special 'diffexpr' for Windows.
if &diffopt !~# 'internal'
  set diffexpr=MyDiff()
endif
function MyDiff()
  let opt = '-a --binary '
  if &diffopt =~ 'icase' | let opt = opt . '-i ' | endif
  if &diffopt =~ 'iwhite' | let opt = opt . '-b ' | endif
  let arg1 = v:fname_in
  if arg1 =~ ' ' | let arg1 = '"' . arg1 . '"' | endif
  let arg1 = substitute(arg1, '!', '\!', 'g')
  let arg2 = v:fname_new
  if arg2 =~ ' ' | let arg2 = '"' . arg2 . '"' | endif
  let arg2 = substitute(arg2, '!', '\!', 'g')
  let arg3 = v:fname_out
  if arg3 =~ ' ' | let arg3 = '"' . arg3 . '"' | endif
  let arg3 = substitute(arg3, '!', '\!', 'g')
  if $VIMRUNTIME =~ ' '
    if &sh =~ '\<cmd'
      if empty(&shellxquote)
        let l:shxq_sav = ''
        set shellxquote&
      endif
      let cmd = '"' . $VIMRUNTIME . '\diff"'
    else
      let cmd = substitute($VIMRUNTIME, ' ', '" ', '') . '\diff"'
    endif
  else
    let cmd = $VIMRUNTIME . '\diff'
  endif
  let cmd = substitute(cmd, '!', '\!', 'g')
  silent execute '!' . cmd . ' ' . opt . arg1 . ' ' . arg2 . ' > ' . arg3
  if exists('l:shxq_sav')
    let &shellxquote=l:shxq_sav
  endif
endfunction

call plug#begin()

Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-commentary'
Plug 'morhetz/gruvbox'
Plug 'vim-python/python-syntax'
Plug 'itchyny/lightline.vim'
Plug 'vim-scripts/AutoComplPop'

call plug#end()

set number relativenumber

colorscheme gruvbox 
set background=dark

set termguicolors
syntax on


let g:python_highlight_space_errors = 0
let g:python_highlight_all = 1
set noswapfile
set incsearch
set tabstop=4 softtabstop=4
set shiftwidth=4
set expandtab
set smartindent
set nowrap
set smartcase
set noerrorbells
set nobackup
set nowritebackup
set cursorline

cnoremap ii <esc>
vnoremap ii <esc>
inoremap ii <esc>

" 'oo' to make new line without entering insert mode
nmap oo o<Esc>k

" ctrl+j to run currently editing python file
autocmd FileType python map <buffer> <C-J> :w<CR>:exec '!python' shellescape(@%, 1)<CR>
autocmd FileType python imap <buffer> <C-J> <esc>:w<CR>:exec '!python' shellescape(@%, 1)<CR>

autocmd InsertEnter * norm zz

set guifont=DejaVu_Sans_Mono:h15

set laststatus=2
let g:lightline = {
       \ 'colorscheme': 'wombat',
       \ }

set clipboard=unnamed
nnoremap // :noh<return>

set encoding=UTF-8

set timeout timeoutlen=300

au GUIEnter * simalt ~x
